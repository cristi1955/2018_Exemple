define([],function(){"use strict";var e,t=t||{};return t.EXTENSION_ID="kmendfapggjehodndflmmgagdbamhnfd",t.MessageTypes={U2F_REGISTER_REQUEST:"u2f_register_request",U2F_REGISTER_RESPONSE:"u2f_register_response",U2F_SIGN_REQUEST:"u2f_sign_request",U2F_SIGN_RESPONSE:"u2f_sign_response",U2F_GET_API_VERSION_REQUEST:"u2f_get_api_version_request",U2F_GET_API_VERSION_RESPONSE:"u2f_get_api_version_response"},t.ErrorCodes={OK:0,OTHER_ERROR:1,BAD_REQUEST:2,CONFIGURATION_UNSUPPORTED:3,DEVICE_INELIGIBLE:4,TIMEOUT:5},t.U2fRequest,t.U2fResponse,t.Error,t.Transport,t.Transports,t.SignRequest,t.SignResponse,t.RegisterRequest,t.RegisterResponse,t.RegisteredKey,t.GetJsApiVersionResponse,t.getMessagePort=function(e){if("undefined"!=typeof chrome&&chrome.runtime){var o={type:t.MessageTypes.U2F_SIGN_REQUEST,signRequests:[]};chrome.runtime.sendMessage(t.EXTENSION_ID,o,function(){chrome.runtime.lastError?t.getIframePort_(e):t.getChromeRuntimePort_(e)})}else t.isAndroidChrome_()?t.getAuthenticatorPort_(e):t.isIosChrome_()?t.getIosPort_(e):t.getIframePort_(e)},t.isAndroidChrome_=function(){var e=navigator.userAgent;return e.indexOf("Chrome")!=-1&&e.indexOf("Android")!=-1},t.isIosChrome_=function(){return["iPhone","iPad","iPod"].indexOf(navigator.platform)>-1},t.getChromeRuntimePort_=function(e){var o=chrome.runtime.connect(t.EXTENSION_ID,{includeTlsChannelId:!0});setTimeout(function(){e(new t.WrappedChromeRuntimePort_(o))},0)},t.getAuthenticatorPort_=function(e){setTimeout(function(){e(new t.WrappedAuthenticatorPort_)},0)},t.getIosPort_=function(e){setTimeout(function(){e(new t.WrappedIosPort_)},0)},t.WrappedChromeRuntimePort_=function(e){this.port_=e},t.formatSignRequest_=function(o,r,n,s,i){if(void 0===e||e<1.1){for(var a=[],p=0;p<n.length;p++)a[p]={version:n[p].version,challenge:r,keyHandle:n[p].keyHandle,appId:o};return{type:t.MessageTypes.U2F_SIGN_REQUEST,signRequests:a,timeoutSeconds:s,requestId:i}}return{type:t.MessageTypes.U2F_SIGN_REQUEST,appId:o,challenge:r,registeredKeys:n,timeoutSeconds:s,requestId:i}},t.formatRegisterRequest_=function(o,r,n,s,i){if(void 0===e||e<1.1){for(var a=0;a<n.length;a++)n[a].appId=o;for(var p=[],a=0;a<r.length;a++)p[a]={version:r[a].version,challenge:n[0],keyHandle:r[a].keyHandle,appId:o};return{type:t.MessageTypes.U2F_REGISTER_REQUEST,signRequests:p,registerRequests:n,timeoutSeconds:s,requestId:i}}return{type:t.MessageTypes.U2F_REGISTER_REQUEST,appId:o,registerRequests:n,registeredKeys:r,timeoutSeconds:s,requestId:i}},t.WrappedChromeRuntimePort_.prototype.postMessage=function(e){this.port_.postMessage(e)},t.WrappedChromeRuntimePort_.prototype.addEventListener=function(e,t){var o=e.toLowerCase();"message"==o||"onmessage"==o?this.port_.onMessage.addListener(function(e){t({data:e})}):console.error("WrappedChromeRuntimePort only supports onMessage")},t.WrappedAuthenticatorPort_=function(){this.requestId_=-1,this.requestObject_=null},t.WrappedAuthenticatorPort_.prototype.postMessage=function(e){var o=t.WrappedAuthenticatorPort_.INTENT_URL_BASE_+";S.request="+encodeURIComponent(JSON.stringify(e))+";end";document.location=o},t.WrappedAuthenticatorPort_.prototype.getPortType=function(){return"WrappedAuthenticatorPort_"},t.WrappedAuthenticatorPort_.prototype.addEventListener=function(e,t){if("message"==e.toLowerCase()){var o=this;window.addEventListener("message",o.onRequestUpdate_.bind(o,t),!1)}else console.error("WrappedAuthenticatorPort only supports message")},t.WrappedAuthenticatorPort_.prototype.onRequestUpdate_=function(e,t){var o=JSON.parse(t.data),r=(o.intentURL,o.errorCode,null);o.hasOwnProperty("data")&&(r=JSON.parse(o.data)),e({data:r})},t.WrappedAuthenticatorPort_.INTENT_URL_BASE_="intent:#Intent;action=com.google.android.apps.authenticator.AUTHENTICATE",t.WrappedIosPort_=function(){},t.WrappedIosPort_.prototype.postMessage=function(e){var t=JSON.stringify(e),o="u2f://auth?"+encodeURI(t);location.replace(o)},t.WrappedIosPort_.prototype.getPortType=function(){return"WrappedIosPort_"},t.WrappedIosPort_.prototype.addEventListener=function(e,t){"message"!==e.toLowerCase()&&console.error("WrappedIosPort only supports message")},t.getIframePort_=function(e){var o="chrome-extension://"+t.EXTENSION_ID,r=document.createElement("iframe");r.src=o+"/u2f-comms.html",r.setAttribute("style","display:none"),document.body.appendChild(r);var n=new MessageChannel,s=function(t){"ready"==t.data?(n.port1.removeEventListener("message",s),e(n.port1)):console.error('First event on iframe port was not "ready"')};n.port1.addEventListener("message",s),n.port1.start(),r.addEventListener("load",function(){r.contentWindow.postMessage("init",o,[n.port2])})},t.EXTENSION_TIMEOUT_SEC=30,t.port_=null,t.waitingForPort_=[],t.reqCounter_=0,t.callbackMap_={},t.getPortSingleton_=function(e){t.port_?e(t.port_):(0==t.waitingForPort_.length&&t.getMessagePort(function(e){for(t.port_=e,t.port_.addEventListener("message",t.responseHandler_);t.waitingForPort_.length;)t.waitingForPort_.shift()(t.port_)}),t.waitingForPort_.push(e))},t.responseHandler_=function(e){var o=e.data,r=o.requestId;if(!r||!t.callbackMap_[r])return void console.error("Unknown or missing requestId in response.");var n=t.callbackMap_[r];delete t.callbackMap_[r],n(o.responseData)},t.sign=function(o,r,n,s,i){void 0===e?t.getApiVersion(function(a){e=void 0===a.js_api_version?0:a.js_api_version,console.log("Extension JS API Version: ",e),t.sendSignRequest(o,r,n,s,i)}):t.sendSignRequest(o,r,n,s,i)},t.sendSignRequest=function(e,o,r,n,s){t.getPortSingleton_(function(i){var a=++t.reqCounter_;t.callbackMap_[a]=n;var p=void 0!==s?s:t.EXTENSION_TIMEOUT_SEC,_=t.formatSignRequest_(e,o,r,p,a);i.postMessage(_)})},t.register=function(o,r,n,s,i){void 0===e?t.getApiVersion(function(a){e=void 0===a.js_api_version?0:a.js_api_version,console.log("Extension JS API Version: ",e),t.sendRegisterRequest(o,r,n,s,i)}):t.sendRegisterRequest(o,r,n,s,i)},t.sendRegisterRequest=function(e,o,r,n,s){t.getPortSingleton_(function(i){var a=++t.reqCounter_;t.callbackMap_[a]=n;var p=void 0!==s?s:t.EXTENSION_TIMEOUT_SEC,_=t.formatRegisterRequest_(e,r,o,p,a);i.postMessage(_)})},t.getApiVersion=function(e,o){t.getPortSingleton_(function(r){if(r.getPortType){var n;switch(r.getPortType()){case"WrappedIosPort_":case"WrappedAuthenticatorPort_":n=1.1;break;default:n=0}return void e({js_api_version:n})}var s=++t.reqCounter_;t.callbackMap_[s]=e;var i={type:t.MessageTypes.U2F_GET_API_VERSION_REQUEST,timeoutSeconds:void 0!==o?o:t.EXTENSION_TIMEOUT_SEC,requestId:s};r.postMessage(i)})},t}.bind(Object.create(null)));
//# sourceMappingURL=u2f-api.min.js-vflkuiHoB.map